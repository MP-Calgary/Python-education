---
title: "Client Report - What's in a Name?"
subtitle: "Course DS 250"
author: "[Michael Parker]"
format:
  html:
    self-contained: true
    page-layout: full
    title-block-banner: true
    toc: true
    toc-depth: 3
    toc-location: body
    number-sections: false
    html-math-method: katex
    code-fold: true
    code-summary: "Show the code"
    code-overflow: wrap
    code-copy: hover
    code-tools:
        source: false
        toggle: true
        caption: See code
execute: 
  warning: false
    
---

```{python}
import pandas as pd
import numpy as np
from lets_plot import *

LetsPlot.setup_html(isolated_frame=True)
```


## Project Notes

__For Project 1 the answer to each question should include a chart **and** a written response. The years labels on your charts should not include a comma. At least **two** of your charts must include reference marks.__  

```{python}
# Learn morea about Code Cells: https://quarto.org/docs/reference/cells/cells-jupyter.html

# Include and execute your code here
df = pd.read_csv("https://github.com/byuidatascience/data4names/raw/master/data-raw/names_year/names_year.csv")
```

## QUESTION|TASK 1

__How does your name at your birth year compare to its use historically?__

In my birth year __1967__, there were __48,900__ people named ___Michael___.  
The name was used the most in __1954__ and has mostly been on a decline since.  

In __1990__, there was a brief resurgence, and the name was used __44,043__ times.

```{python}

# Define the name and birth year
name = "Michael"  # Replace with any name you want to search for
birth_year = 1967  # Replace with the birth year you want to search for


# Filter the data for the specified name
df_name = df[df['name'] == name]

# Find the number of occurrences of the name in the specified birth year
df_name_birth_year = df_name[df_name['year'] == birth_year]
name_birth_year_usage = df_name_birth_year['Total'].values[0] if not df_name_birth_year.empty else 0

# Summarize the historical usage of the specified name
historical_usage = df_name[['year', 'Total']].sort_values(by='year').copy()

# Ensure the DataFrame columns are of the correct type
historical_usage['year'] = historical_usage['year'].astype(int)
historical_usage['Total'] = historical_usage['Total'].astype(float)

if not df_name_birth_year.empty:
    df_name_birth_year = df_name_birth_year[['year', 'Total']].copy()
    df_name_birth_year['year'] = df_name_birth_year['year'].astype(int)
    df_name_birth_year['Total'] = df_name_birth_year['Total'].astype(float)

# Convert DataFrame to a dictionary for LetsPlot
historical_usage_dict = historical_usage.to_dict(orient='list')
if not df_name_birth_year.empty:
    df_name_birth_year_dict = df_name_birth_year.to_dict(orient='list')
else:
    df_name_birth_year_dict = {'year': [], 'Total': []}

# Create the base plot
p = (
    ggplot(historical_usage_dict, aes(x='year', y='Total')) +
    geom_line(color='blue', size=1) +
    ggtitle(f"Usage of the name '{name}' over the years (Including {birth_year})") +
    xlab("Year") +
    ylab("Number of Occurrences") +
    scale_x_continuous(
        format=".0f",  # Ensures no commas in x-axis labels
        limits=(1910, 2015),  # Adjust this dynamically if data range changes
        breaks=list(range(1910, 2016, 10))  # Tick every 10 years
    ) +
    theme_minimal() +
    ggsize(1000, 600)  # Set plot size
)

# Highlight the birth year usage
if df_name_birth_year_dict['year']:
    p += geom_point(
        data=df_name_birth_year_dict,
        mapping=aes(x='year', y='Total'),
        color='red',
        size=5,
        tooltips=layer_tooltips()
            .line("Year|@year")
            .line("Usage|@Total")
    )


# Render the plot
p.show()


```


## QUESTION|TASK 2

__If you talked to someone named Brittany on the phone, what is your guess of his or her age? What ages would you not guess?__

_type your results and analysis here_

```{python}
# Include and execute your code here


```


## QUESTION|TASK 3

__Mary, Martha, Peter, and Paul are all Christian names. From 1920 - 2000, compare the name usage of each of the four names in a single chart. What trends do you notice?__

_type your results and analysis here_

```{python}
# Include and execute your code here

```



## QUESTION|TASK 4

__Think of a unique name from a famous movie. Plot the usage of that name and see how changes line up with the movie release. Does it look like the movie had an effect on usage?__  

_type your results and analysis here_

```{python}
# Include and execute your code here


```

---

## STRETCH QUESTION|TASK 1

__Reproduce the chart Elliot using the data from the `names_year.csv` file.__ 

_type your results and analysis here_

```{python}
# Include and execute your code here


```


---
